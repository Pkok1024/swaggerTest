{
  "openapi": "3.0.0",
  "info": {
    "title": ".M.U.F.A.R. APIs",
    "version": "1.0.11"
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "query",
        "name": "apikey"
      }
    }
  },
  "paths": {
    "/api/ai/bard": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "The search query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with search results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/blackbox": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "The search query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with search results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "iky",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/bingimage": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "The search query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with search results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/gptonline": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "The search query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with search results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/deepenglish": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "The search query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with search results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/Pixart-A": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "prompt",
            "required": true,
            "description": "The search query.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "style",
            "required": true,
            "description": "The style for the AI. Choose from: Cinematic, Photographic, Anime, Manga, Digital Art, Pixel art, Fantasy art, Neonpunk, 3D Model",
            "schema": {
              "type": "string",
              "enum": [
                "Cinematic",
                "Photographic",
                "Anime",
                "Manga",
                "Digital Art",
                "Pixel art",
                "Fantasy art",
                "Neonpunk",
                "3D Model"
              ]
            }
          },
          {
            "in": "query",
            "name": "samplers",
            "required": true,
            "description": "The sampler for the AI. Choose from: DPM-Solver, SA-Solver",
            "schema": {
              "type": "string",
              "enum": [
                "DPM-Solver",
                "SA-Solver"
              ]
            }
          },
          {
            "in": "query",
            "name": "width",
            "required": false,
            "description": "The width of the image.",
            "schema": {
              "type": "integer",
              "enum": [
                256,
                512,
                768,
                1024,
                1280,
                1536,
                1792,
                2048
              ],
              "default": 1024
            }
          },
          {
            "in": "query",
            "name": "height",
            "required": false,
            "description": "The height of the image.",
            "schema": {
              "type": "integer",
              "enum": [
                256,
                512,
                768,
                1024,
                1280,
                1536,
                1792,
                2048
              ],
              "default": 1024
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with search results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "iky",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/toanime": {
      "get": {
        "tags": [
          "Ai"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing or invalid parameters",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid or missing 'url' parameter"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/downloader/tiktok": {
      "get": {
        "tags": [
          "Downloader"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/downloader/facebook": {
      "get": {
        "tags": [
          "Downloader"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/downloader/xnxx": {
      "get": {
        "tags": [
          "Downloader"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/downloader/mediafire": {
      "get": {
        "tags": [
          "Downloader"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/runtime": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get the runtime of the application",
        "description": "Returns the current uptime of the application",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uptime": {
                      "type": "number",
                      "description": "Application uptime in seconds"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/clock": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get the current time in different timezones",
        "description": "Returns the current time in different timezones",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wib": {
                      "type": "string",
                      "description": "Current time in Waktu Indonesia Barat timezone"
                    },
                    "wita": {
                      "type": "string",
                      "description": "Current time in Waktu Indonesia Tengah timezone"
                    },
                    "wit": {
                      "type": "string",
                      "description": "Current time in Waktu Indonesia Timur timezone"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/china": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/indonesia": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/japan": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/korean": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/vietnam": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/random": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/thailand": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/malaysia": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/random/potatogodzilla": {
      "get": {
        "summary": "Get random image and video",
        "description": "Random image API",
        "tags": [
          "Random"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a random image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "author": {
                      "type": "string",
                      "example": "Xyla"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/youtube": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with downloaded YouTube content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/search/xnxx": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with downloaded YouTube content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "status": "Success",
                  "code": 200,
                  "author": "xyla",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/cdn": {
      "post": {
        "summary": "Upload a file to the CDN.",
        "tags": [
          "Uploader"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "author": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - No file uploaded."
          },
          "401": {
            "description": "Unauthorized - Invalid API key."
          },
          "500": {
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "User Registration",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "username"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "summary": "Get user profile information",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "User's email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User's password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "apiKey": {
                      "type": "string"
                    },
                    "isVerified": {
                      "type": "boolean"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}